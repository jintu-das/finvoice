/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as AuthInvoicesRouteImport } from './routes/_auth/invoices'
import { Route as AuthClientsRouteImport } from './routes/_auth/clients'
import { Route as AuthAboutRouteImport } from './routes/_auth/about'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthInvoicesRoute = AuthInvoicesRouteImport.update({
  id: '/invoices',
  path: '/invoices',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthClientsRoute = AuthClientsRouteImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthAboutRoute = AuthAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/about': typeof AuthAboutRoute
  '/clients': typeof AuthClientsRoute
  '/invoices': typeof AuthInvoicesRoute
  '/': typeof AuthIndexRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/about': typeof AuthAboutRoute
  '/clients': typeof AuthClientsRoute
  '/invoices': typeof AuthInvoicesRoute
  '/': typeof AuthIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_auth/about': typeof AuthAboutRoute
  '/_auth/clients': typeof AuthClientsRoute
  '/_auth/invoices': typeof AuthInvoicesRoute
  '/_auth/': typeof AuthIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/sign-in' | '/sign-up' | '/about' | '/clients' | '/invoices' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/sign-in' | '/sign-up' | '/about' | '/clients' | '/invoices' | '/'
  id:
    | '__root__'
    | '/_auth'
    | '/sign-in'
    | '/sign-up'
    | '/_auth/about'
    | '/_auth/clients'
    | '/_auth/invoices'
    | '/_auth/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/invoices': {
      id: '/_auth/invoices'
      path: '/invoices'
      fullPath: '/invoices'
      preLoaderRoute: typeof AuthInvoicesRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/clients': {
      id: '/_auth/clients'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof AuthClientsRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/about': {
      id: '/_auth/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutRouteImport
      parentRoute: typeof AuthRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthAboutRoute: typeof AuthAboutRoute
  AuthClientsRoute: typeof AuthClientsRoute
  AuthInvoicesRoute: typeof AuthInvoicesRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthAboutRoute: AuthAboutRoute,
  AuthClientsRoute: AuthClientsRoute,
  AuthInvoicesRoute: AuthInvoicesRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
