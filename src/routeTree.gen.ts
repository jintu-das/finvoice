/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as AuthSettingsRouteImport } from './routes/_auth/settings'
import { Route as AuthAboutRouteImport } from './routes/_auth/about'
import { Route as AuthInvoicesRouteRouteImport } from './routes/_auth/invoices/route'
import { Route as AuthClientsRouteRouteImport } from './routes/_auth/clients/route'
import { Route as AuthInvoicesIndexRouteImport } from './routes/_auth/invoices/index'
import { Route as AuthClientsIndexRouteImport } from './routes/_auth/clients/index'
import { Route as AuthInvoicesCreateRouteImport } from './routes/_auth/invoices/create'
import { Route as AuthClientsCreateRouteImport } from './routes/_auth/clients/create'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSettingsRoute = AuthSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthAboutRoute = AuthAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthInvoicesRouteRoute = AuthInvoicesRouteRouteImport.update({
  id: '/invoices',
  path: '/invoices',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthClientsRouteRoute = AuthClientsRouteRouteImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthInvoicesIndexRoute = AuthInvoicesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthInvoicesRouteRoute,
} as any)
const AuthClientsIndexRoute = AuthClientsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthClientsRouteRoute,
} as any)
const AuthInvoicesCreateRoute = AuthInvoicesCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AuthInvoicesRouteRoute,
} as any)
const AuthClientsCreateRoute = AuthClientsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AuthClientsRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/clients': typeof AuthClientsRouteRouteWithChildren
  '/invoices': typeof AuthInvoicesRouteRouteWithChildren
  '/about': typeof AuthAboutRoute
  '/settings': typeof AuthSettingsRoute
  '/': typeof AuthIndexRoute
  '/clients/create': typeof AuthClientsCreateRoute
  '/invoices/create': typeof AuthInvoicesCreateRoute
  '/clients/': typeof AuthClientsIndexRoute
  '/invoices/': typeof AuthInvoicesIndexRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/about': typeof AuthAboutRoute
  '/settings': typeof AuthSettingsRoute
  '/': typeof AuthIndexRoute
  '/clients/create': typeof AuthClientsCreateRoute
  '/invoices/create': typeof AuthInvoicesCreateRoute
  '/clients': typeof AuthClientsIndexRoute
  '/invoices': typeof AuthInvoicesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_auth/clients': typeof AuthClientsRouteRouteWithChildren
  '/_auth/invoices': typeof AuthInvoicesRouteRouteWithChildren
  '/_auth/about': typeof AuthAboutRoute
  '/_auth/settings': typeof AuthSettingsRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/clients/create': typeof AuthClientsCreateRoute
  '/_auth/invoices/create': typeof AuthInvoicesCreateRoute
  '/_auth/clients/': typeof AuthClientsIndexRoute
  '/_auth/invoices/': typeof AuthInvoicesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/sign-in'
    | '/sign-up'
    | '/clients'
    | '/invoices'
    | '/about'
    | '/settings'
    | '/'
    | '/clients/create'
    | '/invoices/create'
    | '/clients/'
    | '/invoices/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-in'
    | '/sign-up'
    | '/about'
    | '/settings'
    | '/'
    | '/clients/create'
    | '/invoices/create'
    | '/clients'
    | '/invoices'
  id:
    | '__root__'
    | '/_auth'
    | '/sign-in'
    | '/sign-up'
    | '/_auth/clients'
    | '/_auth/invoices'
    | '/_auth/about'
    | '/_auth/settings'
    | '/_auth/'
    | '/_auth/clients/create'
    | '/_auth/invoices/create'
    | '/_auth/clients/'
    | '/_auth/invoices/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/about': {
      id: '/_auth/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthAboutRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/invoices': {
      id: '/_auth/invoices'
      path: '/invoices'
      fullPath: '/invoices'
      preLoaderRoute: typeof AuthInvoicesRouteRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/clients': {
      id: '/_auth/clients'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof AuthClientsRouteRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/invoices/': {
      id: '/_auth/invoices/'
      path: '/'
      fullPath: '/invoices/'
      preLoaderRoute: typeof AuthInvoicesIndexRouteImport
      parentRoute: typeof AuthInvoicesRouteRoute
    }
    '/_auth/clients/': {
      id: '/_auth/clients/'
      path: '/'
      fullPath: '/clients/'
      preLoaderRoute: typeof AuthClientsIndexRouteImport
      parentRoute: typeof AuthClientsRouteRoute
    }
    '/_auth/invoices/create': {
      id: '/_auth/invoices/create'
      path: '/create'
      fullPath: '/invoices/create'
      preLoaderRoute: typeof AuthInvoicesCreateRouteImport
      parentRoute: typeof AuthInvoicesRouteRoute
    }
    '/_auth/clients/create': {
      id: '/_auth/clients/create'
      path: '/create'
      fullPath: '/clients/create'
      preLoaderRoute: typeof AuthClientsCreateRouteImport
      parentRoute: typeof AuthClientsRouteRoute
    }
  }
}

interface AuthClientsRouteRouteChildren {
  AuthClientsCreateRoute: typeof AuthClientsCreateRoute
  AuthClientsIndexRoute: typeof AuthClientsIndexRoute
}

const AuthClientsRouteRouteChildren: AuthClientsRouteRouteChildren = {
  AuthClientsCreateRoute: AuthClientsCreateRoute,
  AuthClientsIndexRoute: AuthClientsIndexRoute,
}

const AuthClientsRouteRouteWithChildren =
  AuthClientsRouteRoute._addFileChildren(AuthClientsRouteRouteChildren)

interface AuthInvoicesRouteRouteChildren {
  AuthInvoicesCreateRoute: typeof AuthInvoicesCreateRoute
  AuthInvoicesIndexRoute: typeof AuthInvoicesIndexRoute
}

const AuthInvoicesRouteRouteChildren: AuthInvoicesRouteRouteChildren = {
  AuthInvoicesCreateRoute: AuthInvoicesCreateRoute,
  AuthInvoicesIndexRoute: AuthInvoicesIndexRoute,
}

const AuthInvoicesRouteRouteWithChildren =
  AuthInvoicesRouteRoute._addFileChildren(AuthInvoicesRouteRouteChildren)

interface AuthRouteRouteChildren {
  AuthClientsRouteRoute: typeof AuthClientsRouteRouteWithChildren
  AuthInvoicesRouteRoute: typeof AuthInvoicesRouteRouteWithChildren
  AuthAboutRoute: typeof AuthAboutRoute
  AuthSettingsRoute: typeof AuthSettingsRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthClientsRouteRoute: AuthClientsRouteRouteWithChildren,
  AuthInvoicesRouteRoute: AuthInvoicesRouteRouteWithChildren,
  AuthAboutRoute: AuthAboutRoute,
  AuthSettingsRoute: AuthSettingsRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
